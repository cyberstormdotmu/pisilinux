diff -Nuar PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3.orig/pyuic/uic/driver.py PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3/pyuic/uic/driver.py
--- PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3.orig/pyuic/uic/driver.py	2014-06-02 04:45:56.000000000 +0300
+++ PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3/pyuic/uic/driver.py	2014-06-02 23:34:17.844203222 +0300
@@ -1,9 +1,9 @@
 #############################################################################
 ##
 ## Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
-## 
+##
 ## This file is part of PyQt.
-## 
+##
 ## This file may be used under the terms of the GNU General Public
 ## License versions 2.0 or 3.0 as published by the Free Software
 ## Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
@@ -15,10 +15,10 @@
 ## certain additional rights. These rights are described in the Riverbank
 ## GPL Exception version 1.1, which can be found in the file
 ## GPL_EXCEPTION.txt in this package.
-## 
+##
 ## If you are unsure which license is appropriate for your use, please
 ## contact the sales department at sales@riverbankcomputing.com.
-## 
+##
 ## This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 ## WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ##
@@ -29,7 +29,19 @@
 import logging
 
 from PyQt4.uic import compileUi, loadUi
+from PyQt4.uic.Compiler import qtproxies
 
+original_i18n_string = qtproxies.i18n_string
+class i18n_string(qtproxies.i18n_string):
+    def __init__(self, string, disambig=None):
+        original_i18n_string.__init__(self, string, disambig)
+    def __str__(self):
+        return "i18n(%s)" % (qtproxies.as_string(self.string, encode=False),)
+
+_gettext_header = """import gettext
+__trans = gettext.translation('%s', fallback=True)
+i18n = __trans.ugettext
+"""
 
 class Driver(object):
     """ This encapsulates access to the pyuic functionality so that it can be
@@ -42,6 +54,7 @@
         """ Initialise the object.  opts is the parsed options.  ui_file is the
         name of the .ui file.
         """
+        self.gettext_header = ''
 
         if opts.debug:
             logger = logging.getLogger(self.LOGGER_NAME)
@@ -50,6 +63,10 @@
             logger.addHandler(handler)
             logger.setLevel(logging.DEBUG)
 
+        if not opts.gettext_domain == '':
+            qtproxies.i18n_string = i18n_string
+            self.gettext_header = _gettext_header % opts.gettext_domain
+
         self._opts = opts
         self._ui_file = ui_file
 
@@ -96,7 +113,7 @@
 
         compileUi(self._ui_file, pyfile, self._opts.execute, self._opts.indent,
                 self._opts.pyqt3_wrapper, self._opts.from_imports,
-                self._opts.resource_suffix)
+                self.gettext_header, self._opts.resource_suffix)
 
     def on_IOError(self, e):
         """ Handle an IOError exception. """
diff -Nuar PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3.orig/pyuic/uic/__init__.py PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3/pyuic/uic/__init__.py
--- PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3.orig/pyuic/uic/__init__.py	2014-06-02 04:45:56.000000000 +0300
+++ PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3/pyuic/uic/__init__.py	2014-06-02 23:36:00.785205979 +0300
@@ -138,11 +138,11 @@
                 compile_ui(dir, ui)
 
 
-def compileUi(uifile, pyfile, execute=False, indent=4, pyqt3_wrapper=False, from_imports=False, resource_suffix='_rc'):
+def compileUi(uifile, pyfile, execute=False, indent=4, pyqt3_wrapper=False, from_imports=False, additional_text='', resource_suffix='_rc'):
     """compileUi(uifile, pyfile, execute=False, indent=4, pyqt3_wrapper=False, from_imports=False, resource_suffix='_rc')
 
     Creates a Python module from a Qt Designer .ui file.
-    
+
     uifile is a file name or file-like object containing the .ui file.
     pyfile is the file-like object to which the Python code will be written to.
     execute is optionally set to generate extra Python code that allows the
@@ -171,6 +171,8 @@
     indenter.indentwidth = indent
 
     pyfile.write(_header % (uifname, ctime(), PYQT_VERSION_STR))
+    if not additional_text == '':
+        pyfile.write(additional_text)
 
     winfo = compiler.UICompiler().compileUi(uifile, pyfile, from_imports, resource_suffix)
 
diff -Nuar PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3.orig/pyuic/uic/pyuic.py PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3/pyuic/uic/pyuic.py
--- PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3.orig/pyuic/uic/pyuic.py	2014-06-02 04:45:56.000000000 +0300
+++ PyQt-x11-gpl-4.11.1-snapshot-b42b9f1407d3/pyuic/uic/pyuic.py	2014-06-02 23:37:16.586208009 +0300
@@ -1,9 +1,9 @@
 #############################################################################
 ##
 ## Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
-## 
+##
 ## This file is part of PyQt.
-## 
+##
 ## This file may be used under the terms of the GNU General Public
 ## License versions 2.0 or 3.0 as published by the Free Software
 ## Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
@@ -15,10 +15,10 @@
 ## certain additional rights. These rights are described in the Riverbank
 ## GPL Exception version 1.1, which can be found in the file
 ## GPL_EXCEPTION.txt in this package.
-## 
+##
 ## If you are unsure which license is appropriate for your use, please
 ## contact the sales department at sales@riverbankcomputing.com.
-## 
+##
 ## This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 ## WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ##
@@ -53,6 +53,8 @@
         help="generate extra code to test and display the class")
 parser.add_option("-d", "--debug", dest="debug", action="store_true",
         default=False, help="show debug output")
+parser.add_option("-g", "--use-gettext", dest="gettext_domain", action="store", type="str",
+        default='', help="use gettext for following domain")
 parser.add_option("-i", "--indent", dest="indent", action="store", type="int",
         default=4, metavar="N",
         help="set indent width to N spaces, tab if N is 0 [default: 4]")
